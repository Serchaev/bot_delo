from aiogram import F, Router
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.utils.payload import encode_payload

from app.core.services.refer_service import ReferService
from app.core.settings import settings
from app.filters.chat_type import ChatTypeFilter
from app.keyboards.keyboard_only_start import keyboard as keyboard_only_start
from app.texts.ref_text import ref_text

router = Router()


@router.message(
    ChatTypeFilter(chat_type="private"),
    F.text == "–ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É ü§ù",
)
async def ref_program(message: Message):
    count_added = await ReferService.get_count_children(tg_id=str(message.from_user.id))
    deeplink = f"{settings.BOT_USERNAME}?start={encode_payload(payload=str(message.from_user.id))}"
    text = (
        f"–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n\n"
        f"{deeplink}\n\n"
        f"–í–∞—à–∏ –¥—Ä—É–∑—å—è: {count_added}\n\n"
        f"<b>–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–∑—å—è–ºüëá</b>"
    )
    text2 = f"{ref_text}\n{deeplink}"
    await message.bot.send_message(
        chat_id=message.chat.id,
        text=text,
        parse_mode=ParseMode.HTML,
    )
    await message.answer(
        text=text2,
        reply_markup=keyboard_only_start,
        parse_mode=ParseMode.HTML,
    )
